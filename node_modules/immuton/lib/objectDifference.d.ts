/**
 * Determines which properties at the 2nd parameter has different values than the 1st parameter,
 * and returns an object with those properties. By default this performs a deep equality comparison
 * for each property value. You may optionally provide the depth parameter to limit the recursive
 * equality check, 0 meaning just using strict equality check.
 * @param oldObj the old state of an object
 * @param newObj the new state of an object
 * @param depth equality check depth
 */
declare function objectDifference<T>(oldObj: {
    [key: string]: T;
}, newObj: {
    [key: string]: T;
}, depth?: number): {
    [key: string]: T;
};
declare function objectDifference<T>(oldObj: T, newObj: T, depth?: number): Partial<T>;
export default objectDifference;

/**
 * Maps each value for each property of an object to a new value,
 * as returned by the given function that is called for each property.
 * If no property is changed, then the original object reference is returned.
 * @param obj object whose values are mapped
 * @param iterator function that returns new value for each key
 */
declare function transform<T, R>(obj: T, iterator: (value: T[string & keyof T], key: string & keyof T) => R): {
    [P in keyof T]: R;
};
export default transform;

import empty from './empty.js';
/**
 * Flattens an array of arrays to a flat array with the items from
 * the nested arrays. This only performs a shallow flatten.
 * If only one of the included arrays is non-empty, then returns
 * a reference to that array.
 * @param arrays An array of arrays
 */
function flatten(arrays) {
    const { length } = arrays;
    if (!length) {
        return arrays;
    }
    let result;
    for (let i = 0; i < length; i += 1) {
        const array = arrays[i];
        if (array.length) {
            if (result != null) {
                // More than one non-empty array.
                // Fall back to native flatten.
                return empty.concat(...arrays);
            }
            // First non-empty array
            result = array;
        }
    }
    return result || empty;
}
export default flatten;
//# sourceMappingURL=flatten.js.map
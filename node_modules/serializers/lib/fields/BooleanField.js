import ValidationException from '../errors/ValidationException.js';
function ensureBoolean(value) {
    if (typeof value === 'boolean') {
        return value;
    }
    throw new ValidationException('invalidBoolean', `Invalid boolean value`);
}
export default class BooleanField {
    type = 'boolean';
    validate(value) {
        return ensureBoolean(value);
    }
    deserialize(value) {
        return ensureBoolean(value);
    }
    serialize(value) {
        return ensureBoolean(value);
    }
    encode(value) {
        return ensureBoolean(value) ? 'true' : 'false';
    }
    decode(value) {
        switch (value) {
            case 'true':
                return true;
            case 'false':
                return false;
            default:
                throw new ValidationException('invalidBoolean', `Invalid encoded boolean value`);
        }
    }
}

import type Field from './fields/Field.js';
import type { NumberFieldOptions } from './fields/NumberField.js';
import { StringFieldOptions } from './fields/StringField.js';
export declare function string(minLength: number, maxLength: number | null, trim: boolean): Field<string>;
export declare function string(options: StringFieldOptions): Field<string>;
export declare function choice<K extends string>(options: K[]): Field<K>;
export declare function constant<K extends number>(options: K[]): Field<K>;
export declare function integer(options?: NumberFieldOptions): Field<number>;
export declare function number(options?: NumberFieldOptions): Field<number>;
export declare function decimal(decimals?: number): Field<string>;
export declare function boolean(): Field<boolean>;
export declare function matching(regexp: RegExp, errorMessage?: string): Field<string>;
export declare function datetime(): Field<Date, string>;
export declare function date(): Field<Date, string>;
export declare function timestamp(): Field<Date, number>;
export declare function uuid(version?: 1 | 4 | 5): Field<string>;
export declare function email(): Field<string>;
export declare function url(): Field<string>;
export declare function nullable<I, O>(field: Field<I, O>): Field<I | null, O | null>;
export declare function list<I, O>(field: Field<I, O>): Field<I[], O[]>;
